// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Favorites page should render without crashing 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Reviews>
    <NotFound
      Code={null}
      Message="No records found"
    >
      <styled.div>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-bdVaJa",
                "isStatic": false,
                "lastClassName": "cOsgYx",
                "rules": Array [
                  "
  display: flex;
  justify-content: center;
  align-items: center;
  font-style: oblique;
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-bdVaJa",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div
            className="sc-bdVaJa cOsgYx"
          >
            <styled.div>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-bwzfXH",
                      "isStatic": false,
                      "lastClassName": "fMMdfB",
                      "rules": Array [
                        "
  display: flex;
  flex-direction: column;
  text-align: center;
  margin-top: 90px;
",
                      ],
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-bwzfXH",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="sc-bwzfXH fMMdfB"
                >
                  <strong />
                  <strong>
                    No records found
                  </strong>
                </div>
              </StyledComponent>
            </styled.div>
          </div>
        </StyledComponent>
      </styled.div>
    </NotFound>
  </Reviews>
</Provider>
`;

exports[`Favorites page should render without crashing 2`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Reviews>
    <styled.div>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bxivhb",
              "isStatic": false,
              "lastClassName": "kGFQwP",
              "rules": Array [
                "
  max-width: 1020px;
  display: flex;
  flex-direction: column;
  margin: 0 auto;
  padding: 0 20px 50px;
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bxivhb",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="sc-bxivhb kGFQwP"
        >
          <Review
            key="title-criticName"
            rawData={
              Object {
                "byline": "criticName",
                "critics_pick": 1,
                "display_title": "title",
                "link": Object {
                  "url": "#",
                },
                "multimedia": Object {
                  "src": "#",
                },
                "publication_date": "01-01-2020",
                "summary_short": "description",
              }
            }
          >
            <styled.div>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-htpNat",
                      "isStatic": false,
                      "lastClassName": "eDqmOb",
                      "rules": Array [
                        "
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 20px;
  margin-top: 15px;
  border-radius: 4px;
  background: #fff;

  &:hover {
    background: ",
                        "#f5f5f5",
                        ";
  }

  div {
    strong {
      display: block;
      font-size: 20px;
    }

    small {
      display: flex;
      align-items: stretch;
      padding: 0;
      margin: 2px 0 0 0;
      color: #999;

      img {
        width: 16px;
        height: 16px;
        padding: 0;
        margin: 0 4px 0 0;
      }
    }

    span {
      display: block;
      margin-top: 15px;
      color: #000000;
    }

    a {
      display: block;
      margin-top: 15px;
      color: #999;
      font-weight: bold;

      &:hover {
        color: ",
                        "#191919",
                        ";
      }
    }

    button {
      display: block;
      margin-top: 5px;
      color: #999;
      background-color: transparent;
      font-weight: bold;
      border: none;
      cursor: pointer;

      &:hover {
        color: ",
                        "#191919",
                        ";
      }
    }
  }

  img {
    margin: 0 0 0 20px;
    height: 120px;

    @media (max-width: 480px) {
      display: none;
    }
  }
",
                      ],
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-htpNat",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="sc-htpNat eDqmOb"
                >
                  <div>
                    <strong>
                      title
                    </strong>
                    <small>
                      <img
                        alt="NYTCriticsPick"
                        src="check.svg"
                      />
                      NYT Critic Pick
                    </small>
                    <small>
                      01/01/2020
                    </small>
                    <small>
                      By 
                      criticName
                    </small>
                    <span>
                      description
                    </span>
                    <a
                      href="#"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Read review
                    </a>
                    <button
                      className="handleFavoritesButton"
                      onClick={[Function]}
                      type="button"
                    >
                      Remove from favorites
                    </button>
                  </div>
                  <img
                    alt="MovieImage"
                    src="#"
                  />
                </div>
              </StyledComponent>
            </styled.div>
          </Review>
        </div>
      </StyledComponent>
    </styled.div>
  </Reviews>
</Provider>
`;
